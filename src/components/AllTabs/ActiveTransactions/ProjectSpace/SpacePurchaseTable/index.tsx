'use client'
import Image from 'next/image';
import React, { useEffect, useState } from 'react'
import ProjectspacePDF from '../../../../Modals/projectspacePDF';
import PdfModal from './redlinepdf';
import PdfViewer from './redlinepdf/textpdf';

const PurchaseTable = () => {
    const [isOpenTable, setISopenTable] = useState(false)
    const [isPdfOpen, setIsPdfOpen] = useState(false)
    const [isRedlinePdf, setIsRedlinePdf] = useState(false)
    const [showColumn, setShowColumn] = useState(false);

    const headers = ['Version', 'Version Type', 'Date Uploaded', 'Document', 'Relavennt Support'];
    // const data = [
    //     ['Project Space SPA V1', 'Autogenerated', '3/2/2024 at 5:00PM', '/icons/pdficon.svg', '/icons/wordfile.svg', 'EsquireAI prompt'],
    //     ['Project Space SPA V2', 'From Counsel', '3/6/2024 at 6:00PM', '/icons/pdficon.svg', '/icons/wordfile.svg', 'Email with Sage Capital Comments', 'Redline'],
    //     ['Project Space SPA V3', 'Sent Externally', '3/8/2024 at 8:00PM', '/icons/pdficon.svg', '/icons/wordfile.svg', 'NWC Math for PEG', 'Redline'],
    //     ['Project Space SPA V4', 'External Counter', '3/15/2024 at 9:00PM', '/icons/pdficon.svg', '/icons/wordfile.svg', 'Indebtedness Calc', 'Redline'],
    //     ['Project Space SPA V5', '-', '3/20/2024 at 11:00PM', '/icons/pdficon.svg', '/icons/wordfile.svg', 'Indebtedness Calc', 'Redline']
    // ];

    const [data, setData] = useState([
        ['Project Space SPA V1', 'Autogenerated', '3/2/2024 at 5:00PM', '/icons/pdficon.svg', '/icons/wordfile.svg', 'EsquireAI prompt'],
        ['Project Space SPA V2', 'From Counsel', '3/6/2024 at 6:00PM', '/icons/pdficon.svg', '/icons/wordfile.svg', 'Email with Sage Capital Comments', 'Redline'],
        ['Project Space SPA V3', 'Sent Externally', '3/8/2024 at 8:00PM', '/icons/pdficon.svg', '/icons/wordfile.svg', 'NWC Math for PEG', 'Redline'],
        ['Project Space SPA V4', 'External Counter', '3/15/2024 at 9:00PM', '/icons/pdficon.svg', '/icons/wordfile.svg', 'Indebtedness Calc', 'Redline'],
        ['Project Space SPA V5', '-', '3/20/2024 at 11:00PM', '/icons/pdficon.svg', '/icons/wordfile.svg', 'Indebtedness Calc', 'Redline']
    ]);

    useEffect(() => {
        if (showColumn) {
            setData(prevData => [...prevData, ['Project Space SPA V5', '-', '3/20/2024 at 11:00PM', '/icons/pdficon.svg', '/icons/wordfile.svg', 'Indebtedness Calc', 'Redline']]);
        } else {
            setData(prevData => prevData.slice(0, 4));
        }
    }, [showColumn]);

    return (
        <div className='w-full flex flex-col gap-4'>
            <div>
                <div className='flex gap-4 items-center cursor-pointer' onClick={() => setISopenTable(!isOpenTable)}>
                    <div className='text-black text-[18px] font-medium'>
                        Stock Purchase Agreement
                    </div>
                    <Image src='/icons/downarrowsvg.svg' alt='' width={15} height={15} className={`${isOpenTable ? 'duration-500 rotate-180' : 'duration-500 rotate-0'}`} />
                </div>
                <p className='text-cyan-600 font-medium'>See Previous Prompts and comparisons</p>
            </div>
            {
                !isOpenTable &&
                <div className='flex items-end relative'>
                    <table className='w-full slide-in'>
                        <thead>
                            <tr className='border'>
                                {headers.map((item, index) => (
                                    <th key={index} className='text-start p-3 border underline'>{item}</th>
                                ))}
                            </tr>
                        </thead>
                        <tbody>
                            {data.map((row, index) => (
                                <tr key={index} className='border'>
                                    <td className='text-start border p-2'>{row[0]}</td>
                                    <td className='text-start border p-2'>{row[1]}</td>
                                    <td className='text-start border p-2'>{row[2]}</td>
                                    <td className='text-start border p-2'>{row[3] && <>
                                        <div className='flex gap-5 items-center'>
                                            <Image
                                                src={row[3]}
                                                alt="Icon"
                                                width="23"
                                                height="23"
                                                className='cursor-pointer'
                                                onClick={() => {
                                                    if (index === 4) {
                                                        setIsPdfOpen(!isPdfOpen);
                                                    }
                                                }}
                                            />
                                            <Image
                                                src={row[4]}
                                                alt="Icon"
                                                width="20"
                                                height="20"
                                                className='cursor-pointer'
                                                onClick={() => {
                                                    if (index === 4) {
                                                        setIsPdfOpen(!isPdfOpen);
                                                    }
                                                }}
                                            />

                                            <span className='text-red-500 text-[12px] ml-2 font-medium cursor-pointer' onClick={() => {
                                                if (index === 4) {
                                                    setIsRedlinePdf(true)
                                                }
                                            }}>
                                                {row[6]}
                                            </span>
                                        </div>
                                    </>
                                    }
                                    </td>
                                    <td className={`text-start border p-2`}>- {row[5]}</td>
                                </tr>
                            ))}
                        </tbody>
                    </table>
                    <button onClick={() => setShowColumn(!showColumn)} className='ml-2 absolute top-[208px] -right-7'>
                        <Image src='/icons/magicstick.png' width={20} height={20} alt='' />
                    </button>
                </div>
            }

            {
                isPdfOpen &&
                <ProjectspacePDF filePath='/Husky.pdf' isPdfOpen={isPdfOpen} setIsPdfOpen={() => setIsPdfOpen(false)} />
            }
            {
                isRedlinePdf &&
                // <PdfViewer />
                <PdfModal setIsRedlinePdf={() => setIsRedlinePdf(false)} isRedlinePdf={isRedlinePdf} />
            }

        </div >
    )
}

export default PurchaseTable